<Window x:Class="Carnassial.Editor.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Carnassial.Editor"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        AutomationProperties.AutomationId="CarnassialTemplateEditor"
        Height="900" Width="1350" MinHeight="560" MinWidth="800" Icon="Editor.ico" Loaded="Window_Loaded" Closing="Window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <ToolTip x:Key="DefaultValueToolTip">
                <TextBlock>An optional default data value that will be displayed to the analyst</TextBlock>
            </ToolTip>
            <ToolTip x:Key="LabelToolTip">
                <TextBlock>The text describing this field as shown in the user interface</TextBlock>
            </ToolTip>
            <ToolTip x:Key="DataLabelToolTip">
                <TextBlock>The text describing this field as written in the output file. Will be the same as the Label if its left empty.</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TooltipToolTip">
                <TextBlock>The help text describing this field as shown in the user interface</TextBlock>
            </ToolTip>
            <ToolTip x:Key="WidthToolTip">
                <TextBlock>The width of the data entry field as shown in the user interface</TextBlock>
            </ToolTip>
            <ToolTip x:Key="CopyableToolTip">
                <TextBlock>Whether the data value from the previous will be copied to the current file if the user selects the ‘Copy’ button in Carnassial</TextBlock>
            </ToolTip>
            <ToolTip x:Key="VisibleToolTip">
                <TextBlock>Whether this item will be displayed in the user interface</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeNoteToolTip">
                <TextBlock>The Note item accepts free-form text</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeCounterToolTip">
                <TextBlock>The Count item provides a point and click interface for counting entities in an image or video</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeFixedChoiceToolTip">
                <TextBlock>The Choice item provides a drop down menu of possible choices that can be entered. Edit the list to create these choices</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeFlagToolTip">
                <TextBlock>The Flag item can be toggled between true and false</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeFileToolTip">
                <TextBlock>The File Item is filled in automatically by the system with the file name of the image or video</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeFolderToolTip">
                <TextBlock>The Folder Item is filled in automatically by the system</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeDateToolTip">
                <TextBlock>The Date item is filled in automatically by the system but will still be editable if changes are required</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeTimeToolTip">
                <TextBlock>The Time item is filled in automatically by the system but will still be editable if changes are required</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeImageQualityToolTip">
                <TextBlock>The Image Quality item is filled in automatically by the system</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeDeletionFlagToolTip">
                <TextBlock>The Deleted flag is a standard control used to mark files for deletion</TextBlock>
            </ToolTip>
            <ToolTip x:Key="ListFixedChoiceToolTip">
                <TextBlock>A list of items displayed as a menu of choices. Type in new items; right click on an item to edit, move or delete it.</TextBlock>
            </ToolTip>
            <local:CellTextBlockConverter x:Key="CellTextBlockConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0,0,0,5" />
            </Style>
        </Grid.Resources>

        <!-- Menus -->
        <Menu Grid.Row="0">
            <!-- File Menu -->
            <MenuItem Name="FileMenu" Header="_File" >
                <MenuItem Name="MenuFileNewTemplate" Header="_New..." Click="MenuFileNewTemplate_Click" ToolTip="Create a new data template file.">
                    <MenuItem.Icon>
                        <Image Source="Resources/Menu/NewFile_16x.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="MenuFileOpenTemplate" Header="_Open..." Click="MenuFileOpenTemplate_Click" ToolTip="Open an existing data template file.">
                    <MenuItem.Icon>
                        <Image Source="Resources/Menu/OpenFolder_16x.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Name="MenuFileRecentTemplates" Header="_Recent templates" IsEnabled="false" ToolTip="Recently used templates."/>
                <Separator />
                <MenuItem Header="E_xit" Click="MenuFileExit_Click" ToolTip="Quit the template editor.">
                    <MenuItem.Icon>
                        <Image Source="Resources/Menu/Exit_16x.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <!-- View Menu -->
            <MenuItem Name="MenuView" Header="_View" IsEnabled="False">
                <MenuItem Name="MenuViewShowAllColumns" IsCheckable="True" IsChecked="False" Header="Show all _columns" Click="MenuViewShowAllColumns_Click" ToolTip="Show the ordering used when displaying controls and for .csv file columns.">
                </MenuItem>
                <MenuItem Header="Inspect file _metadata..." ToolTip="See what metadata is available in an image or video of your choosing." Click="MenuViewInspectMetadata_Click">
                </MenuItem>
            </MenuItem>

            <!-- Help Menu -->
            <MenuItem Header="_Help" >
                <MenuItem Header="_About..." Click="MenuHelpAbout_Click" ToolTip="Displays version information about this program and how to contact the developers."/>
            </MenuItem>
        </Menu>

        <xcad:DockingManager AllowMixedOrientation="True" BorderBrush="Black" BorderThickness="1" Grid.Row="1">
            <xcad:DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding IconSource}" Margin="0,0,4,0"/>
                        <TextBlock Text="{Binding Title}" />
                    </StackPanel>
                </DataTemplate>
            </xcad:DockingManager.DocumentHeaderTemplate>
            <xcad:LayoutRoot x:Name="LayoutRoot">
                <xcad:LayoutPanel Orientation="Horizontal">
                    <xcad:LayoutDocumentPaneGroup>
                        <xcad:LayoutDocumentPane>
                            <xcad:LayoutDocument x:Name="InstructionPane" Title="Instructions">
                                <FlowDocumentScrollViewer AllowDrop="True" Drop="Instructions_Drop" PreviewDragEnter="Instructions_PreviewDrag" PreviewDragOver="Instructions_PreviewDrag" VerticalScrollBarVisibility="Auto">
                                    <FlowDocument FontSize="12" TextAlignment="Left" ColumnRuleWidth="2" FontFamily="Verdana">
                                        <Paragraph FontWeight="Bold" FontSize="20">What the Template Editor does</Paragraph>
                                        <Paragraph>
                                            Information recorded for each image or video from a camera is specific to the kinds of files you want to analyze, your data needs, and how that data will be processed.  This differs between organizations and possibly between different kinds of image sets.  You define your needs through this template editor which saves them in template (.tdb file) named
                                            <Bold>CarnassialTemplate.tdb</Bold> by default.  This template file is then included in each image set folder.  Carnassial looks the template and uses it to create the user interface and manage the data you enter.
                                        </Paragraph>
                                        <Paragraph FontWeight="Bold" FontSize="20">Working with templates</Paragraph>
                                        <List>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>File -> New</Bold> Creates a new template with required fields which you can then add new fields to.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>File -> Open</Bold> Opens an existing template so you can further modify its contents.
                                                </Paragraph>
                                            </ListItem>
                                        </List>
                                        <Paragraph>Each template includes several required fields:
                                            <Bold>RelativePath, File, DateTime, UtcOffset, ImageQuality,</Bold> and
                                            <Bold>DeleteFlag</Bold> .  
                                            Carnassial fills these in automatically.  The template editor gives you the option of making these (and other) fields invisible in the user interface.  RelativePath and File locate files on disk and DateTime and UtcOffset completely describe when a file was captured.  ImageQuality powers much of Carnassial's select menu and DeleteFlag enables one selection option as well as delete options under Carnassial's edit menu.
                                        </Paragraph>
                                        <Paragraph>You can add new data fields specific to your project. Each will be one of the following types.</Paragraph>
                                        <List>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Counter</Bold> Numeric data (integers).  Normally used to count specific entities found in an image.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Choice</Bold> A list of values selected from a menu.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Note</Bold> General purpose textual data usable for any purpose (comments, camera station names, study sites, survey name,
                                                    <Italic>etc</Italic> .)
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Flag</Bold> Boolean data; true or false.
                                                </Paragraph>
                                            </ListItem>
                                        </List>
                                        <Paragraph>You can specify various attributes for each field.</Paragraph>
                                        <List>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Default value</Bold>  The field's initial value.  For example, if a survey name field is present it's often quite convenient to have it default to something like "Our Spiffy Project" rather than requiring this be typed in for every file in the image set.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Label</Bold>  The name displayed for the field in Carnassial's user interface.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Data label</Bold>  The field's column name in Carnassial's database file (.ddb).  Much more restricted than the label.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Tooltip</Bold>  Help text displayed when a Carnassial user hovers the mouse cursor over the field's name.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Copyable</Bold>  Whether or not Carnassial's copy from previous button and context menus can be used to populate data in the field.  In most cases it's desirable to have fields be copyable.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Visible</Bold>  Whether or not a field is displayed in the Carnassial user interface.  Fields should generally be visible.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>Width</Bold>  How wide the field appears in the Carnassial user interface.  The editor shows a preview of the layout.
                                                </Paragraph>
                                            </ListItem>
                                            <ListItem>
                                                <Paragraph>
                                                    <Bold>List</Bold> The choices available for a choice field, entered one per line.  Including an empty line allows the field to be set to empty.  Each choice must be unique.
                                                </Paragraph>
                                            </ListItem>
                                        </List>
                                        <Paragraph>You can also drag and drop the fields in the preview windows to set their order in the Carnassial user interface and the column order in .csv spreadsheet files.</Paragraph>
                                        <Paragraph>If you're new to Carnassial <Hyperlink Name="TutorialLink" RequestNavigate="TutorialLink_RequestNavigate">check out the tutorial</Hyperlink> for more help.</Paragraph>
                                    </FlowDocument>
                                </FlowDocumentScrollViewer>
                            </xcad:LayoutDocument>
                            <!-- AvalonDock uses a fixed zero margin after uncloseable tab titles; fake a margin with some trailing spaces -->
                            <xcad:LayoutDocument x:Name="TemplatePane" Title="Template  " CanClose="False" AutomationProperties.AutomationId="TemplatePane">
                                <Grid Margin="10,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="100" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <!-- If you change the visible rows or header names, please check UpdateCellColors() constants to ensure they match new conventions -->
                                    <DataGrid Name="TemplateDataGrid" MinHeight="250" VerticalAlignment="Top" Grid.Row="0" RowHeight="25" VirtualizingStackPanel.IsVirtualizing="False"
                                              AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" 
                                              BeginningEdit="TemplateDataGrid_BeginningEdit"
                                              CellEditEnding="TemplateDataGrid_CellEditEnding"
                                              CurrentCellChanged="TemplateDataGrid_CurrentCellChanged" 
                                              PreviewTextInput="TemplateDataGrid_PreviewTextInput" 
                                              LayoutUpdated="TemplateDataGrid_LayoutUpdated"
                                              SelectionChanged="TemplateDataGrid_SelectionChanged" 
                                              ItemsSource="{Binding}" Margin="0,0,10,0" SelectionMode="Single"
                                              ColumnHeaderStyle="{DynamicResource VerticalGridHeaderStyle}">
                                        <DataGrid.Resources>
                                            <Style x:Key="VerticalGridHeaderStyle" TargetType="DataGridColumnHeader">
                                                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                            </Style>
                                        </DataGrid.Resources>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="ID" CanUserSort="False" IsReadOnly="True" Binding="{Binding Path=Id, Converter={StaticResource CellTextBlockConverter}}" Visibility="Collapsed" />
                                            <DataGridTextColumn Header="Control&#x0a;Order" Binding="{Binding Path=ControlOrder, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" IsReadOnly="True" Visibility="Collapsed" />
                                            <DataGridTextColumn Header="Spreadsheet&#x0a;Order" Binding="{Binding Path=SpreadsheetOrder, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" IsReadOnly="True" Visibility="Collapsed" />
                                            <DataGridTextColumn MinWidth="40" Header="Type" Binding="{Binding Path=Type, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Type}" Value="Note">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeNoteToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeCounterToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeFixedChoiceToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="Flag">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeFlagToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="File">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeFileToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="Folder">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeFolderToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="Date">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeDateToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="Time">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeTimeToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="ImageQuality">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeImageQualityToolTip}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="DeleteFlag">
                                                                <Setter Property="ToolTip" Value="{StaticResource TypeDeletionFlagToolTip}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn MinWidth="40"  Header="Default Value" Binding="{Binding Path=DefaultValue, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" >
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="ToolTip" Value="{StaticResource DefaultValueToolTip}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                                <Setter Property="TextAlignment" Value="Right"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn MinWidth="40"  Header="Label" Binding="{Binding Path=Label, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" >
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="ToolTip" Value="{StaticResource LabelToolTip}"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn MinWidth="40"   Header="Data Label"  Binding="{Binding Path=DataLabel,  Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" >
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="ToolTip" Value="{StaticResource DataLabelToolTip}"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn MinWidth="50"  Header="Tooltip" Binding="{Binding Path=Tooltip, Converter={StaticResource CellTextBlockConverter}}" Width="*" CanUserSort="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="ToolTip" Value="{StaticResource TooltipToolTip}"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn MinWidth="40"  Header="Width" Binding="{Binding Path=Width, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="ToolTip" Value="{StaticResource WidthToolTip}"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridCheckBoxColumn MinWidth="25" Width="Auto" Header="Copyable" SortMemberPath="Include" CanUserSort="False" Binding="{Binding Path=Copyable, UpdateSourceTrigger=PropertyChanged}">
                                                <DataGridCheckBoxColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="ToolTip" Value="{StaticResource CopyableToolTip}"/>
                                                    </Style>
                                                </DataGridCheckBoxColumn.CellStyle>
                                            </DataGridCheckBoxColumn>
                                            <DataGridCheckBoxColumn MinWidth="25" Width="Auto" Header="Visible" SortMemberPath="Include" CanUserSort="False" Binding="{Binding Path=Visible, UpdateSourceTrigger=PropertyChanged}">
                                                <DataGridCheckBoxColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="ToolTip" Value="{StaticResource VisibleToolTip}"/>
                                                    </Style>
                                                </DataGridCheckBoxColumn.CellStyle>
                                            </DataGridCheckBoxColumn>

                                            <DataGridTemplateColumn MinWidth="40" Header="List" Width="80"  CanUserSort="False" >
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <Button Tag="{Binding Path=ControlOrder}" Click="ChoiceListButton_Click" local:EditorWindowExtensions.ChoiceList="{Binding Path=List, Mode=TwoWay}" Margin="1"  Content="Define List" >
                                                                <Button.Style>
                                                                    <Style TargetType="{x:Type Button}">
                                                                        <Style.Triggers>
                                                                            <!--Triggers for disabling lists for some types-->
                                                                            <DataTrigger Binding="{Binding Type}" Value="File">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="RelativePath">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="Folder">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="DateTime">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="UtcOffset">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="Date">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="Time">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="DeleteFlag">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="Flag">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                                                                <Setter Property="ToolTip" Value="{StaticResource ListFixedChoiceToolTip}"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Button.Style>
                                                            </Button>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <DockPanel Name="RowControls" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,10,0" >
                                        <Border DockPanel.Dock="Top" BorderBrush="LightGray" BorderThickness="1" Margin="0">
                                            <DockPanel DockPanel.Dock="Top" Margin="0,0,0,-1" >
                                                <TextBlock Margin="0,0,0,5" DockPanel.Dock="Top" FontSize="14" HorizontalAlignment="Center"><Run Text="Add:"/></TextBlock>
                                                <UniformGrid Margin="0,0,0,0" Rows="4" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                                                    <Button Content="Count"  Margin="0,0,0,2.5" Tag="Counter" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddControlButton_Click" Name="AddCounterButton"/>
                                                    <Button Content="Choice" Margin="0,0,0,2.5" Tag="FixedChoice" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddControlButton_Click" Name="AddFixedChoiceButton"/>
                                                    <Button Content="Note" Margin="0,0,0,2.5" Tag="Note" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddControlButton_Click" Name="AddNoteButton"/>
                                                    <Button Content="Flag" Margin="0,0,0,0" Tag="Flag" DockPanel.Dock="Bottom"  HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddControlButton_Click" Name="AddFlagButton"/>
                                                </UniformGrid>
                                            </DockPanel>
                                        </Border>
                                        <Button Content="Remove" FontSize="12" HorizontalContentAlignment="Center" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Name="RemoveControlButton" IsEnabled="False" Height="Auto" MinHeight="30" VerticalAlignment="Top"  Click="RemoveControlButton_Click" Margin="0,30,0,0"/>
                                    </DockPanel>
                                    <GridSplitter Grid.Row="1" Grid.ColumnSpan="2"
                                                  Height="2" Background="DarkGray" Margin="-10,10,0,0"
                                                  VerticalAlignment="Top" 
                                                  HorizontalAlignment="Stretch" />

                                    <!-- spreadsheet order -->
                                    <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="0,7,0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Margin="0,5,10,0" Text="The spreadsheet column order.  Drag and drop columns to re-arrange their order to your preference"></TextBlock>
                                        <Border Grid.Row="1" BorderBrush="Gray" Background="White" BorderThickness="1" Margin="0,0,10,10">
                                            <ScrollViewer MinHeight="50" Height="50" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top">
                                                <DataGrid x:Name="SpreadsheetOrderPreview" Margin="0,10,0,0"  MinHeight="25" Height="25" ColumnReordered="OnSpreadsheetOrderChanged" VerticalAlignment="Top"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </xcad:LayoutDocument>
                        </xcad:LayoutDocumentPane>
                    </xcad:LayoutDocumentPaneGroup>
                    <xcad:LayoutAnchorablePaneGroup DockWidth="300">
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="Control layout" CanClose="False">
                                <Grid Name="ControlGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.Row="0" BorderBrush="Gray" Background="White" BorderThickness="1" Margin="0,0,10,10" >
                                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                            <WrapPanel x:Name="ControlsPanel" Margin="10,10,10,0" Orientation="Horizontal" Tag="DROPTARGET" AllowDrop="True" PreviewMouseLeftButtonDown="ControlsPanel_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="ControlsPanel_PreviewMouseLeftButtonUp" PreviewMouseMove="OnPreviewMouseMove"
                                                       DragEnter="ControlsPanel_DragEnter" Drop="ControlsPanel_DragDrop" />
                                        </ScrollViewer>
                                    </Border>
                                    <TextBlock Grid.Row="1" Text="Drag and drop these controls (by their labels) to re-arrange their order to your preference" TextWrapping="Wrap" />
                                </Grid>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutAnchorablePaneGroup>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
        </xcad:DockingManager>
    </Grid>
</Window>
