<carnassial:ApplicationWindow x:Class="Carnassial.Editor.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:carnassial="clr-namespace:Carnassial;assembly=Carnassial"
        xmlns:control="clr-namespace:Carnassial.Control;assembly=Carnassial"
        xmlns:editorUtil="clr-namespace:Carnassial.Editor.Util"
        xmlns:util="clr-namespace:Carnassial.Util;assembly=Carnassial"
        AutomationProperties.AutomationId="CarnassialTemplateEditor" Icon="Editor.ico" 
        Closing="Window_Closing" Loaded="Window_Loaded" Style="{StaticResource ApplicationWindow}"
        Height="860" Width="1488" MinHeight="560" MinWidth="800">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CloseWindow_Execute" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="MaximizeWindow_Execute" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="MinimizeWindow_Execute" />
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="RestoreWindow_Execute" />
        <CommandBinding Command="{x:Static SystemCommands.ShowSystemMenuCommand}" CanExecute="CommandBinding_CanExecute" Executed="ShowSystemMenu_Execute" />
    </Window.CommandBindings>
    <Window.Resources>
        <ResourceDictionary>
            <editorUtil:ControlTypeDefaultValueSelector x:Key="ControlTypeDefaultValueSelector" />
            <editorUtil:FlagValueConverter x:Key="FlagValueConverter" />
            <editorUtil:TrimmingConverter x:Key="TrimmingConverter" />
            <util:ControlTypeConverter x:Key="ControlTypeConverter" />
            <util:WellKnownValueConverter x:Key="WellKnownValueConverter" />

            <DataTemplate x:Key="DefaultValueChoiceComboBox">
                <ComboBox ItemsSource="{Binding Path=WellKnownValues, Converter={StaticResource WellKnownValueConverter}}" SelectedItem="{Binding Path=DefaultValue, UpdateSourceTrigger=PropertyChanged}" ToolTip="The value the field will be set to by default." ToolTipService.ShowOnDisabled="True" BorderThickness="0" />
            </DataTemplate>
            <DataTemplate x:Key="DefaultValueFlagComboBox">
                <ComboBox ItemsSource="{Binding Path=WellKnownValues, Converter={StaticResource FlagValueConverter}}" SelectedItem="{Binding Path=DefaultValue, Converter={StaticResource FlagValueConverter}, UpdateSourceTrigger=PropertyChanged}" ToolTip="The value the field will be set to by default." ToolTipService.ShowOnDisabled="True" BorderThickness="0" />
            </DataTemplate>
            <DataTemplate x:Key="DefaultValueTextBox">
                <control:AutocompleteTextBox Autocompletions="{Binding Path=WellKnownValues, Converter={StaticResource WellKnownValueConverter}}" Text="{Binding Path=DefaultValue, Converter={StaticResource TrimmingConverter}, UpdateSourceTrigger=PropertyChanged}" ToolTip="The value the field will be set to by default." ToolTipService.ShowOnDisabled="True" BorderThickness="0" />
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Style="{StaticResource ApplicationGrid}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding Source={x:Static SystemParameters.WindowCaptionHeight}}" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0,0,0,5" />
            </Style>
        </Grid.Resources>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="307" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Style="{StaticResource ApplicationIcon}" Grid.Column="0" />
            <Menu Style="{StaticResource ApplicationMenu}" Grid.Column="1">
                <!-- file menu -->
                <MenuItem Name="FileMenu" Header="_File">
                    <MenuItem Name="MenuFileNewTemplate" Header="_New..." Click="MenuFileNewTemplate_Click" Style="{StaticResource ApplicationMenuItem}" ToolTip="Create a new data template file.">
                        <MenuItem.Icon>
                            <Image Source="Resources/Menu/NewFile_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="MenuFileOpenTemplate" Header="_Open..." Click="MenuFileOpenTemplate_Click" Style="{StaticResource ApplicationMenuItem}" ToolTip="Open an existing data template file.">
                        <MenuItem.Icon>
                            <Image Source="Resources/Menu/OpenFolder_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Name="MenuFileRecentTemplates" Header="_Recent templates" IsEnabled="false" Style="{StaticResource ApplicationMenuItem}" ToolTip="Recently used templates."/>
                    <Separator />
                    <MenuItem Name="MenuFileCloseTemplate" Header="C_lose template" Click="MenuFileCloseTemplate_Click" IsEnabled="False" Style="{StaticResource ApplicationMenuItem}" ToolTip="Closes the current template so another can be opened.">
                        <MenuItem.Icon>
                            <Image Source="Resources/Menu/CloseSolution_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="E_xit" Click="MenuFileExit_Click" Style="{StaticResource ApplicationMenuItem}" ToolTip="Quit the template editor.">
                        <MenuItem.Icon>
                            <Image Source="Resources/Menu/Exit_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>

                <!-- view menu -->
                <MenuItem Name="MenuView" Header="_View" IsEnabled="False">
                    <MenuItem Header="Inspect file _metadata..." Click="MenuViewInspectMetadata_Click" Style="{StaticResource ApplicationMenuItem}" ToolTip="See what metadata is available in an image or video of your choosing." />
                </MenuItem>

                <!-- options menu -->
                <MenuItem Name="MenuOptions" Header="_Options" IsEnabled="False">
                    <MenuItem Name="MenuOptionsShowAllColumns" Header="Show all _columns" Click="MenuOptionsShowAllColumns_Click" IsCheckable="True" IsChecked="False" Style="{StaticResource ApplicationMenuItem}" ToolTip="Show the ordering used when displaying controls and for .csv file columns." />
                    <Separator/>
                    <MenuItem Name="MenuOptionsAdvancedImageSetOptions" Header="Advanced _image set options..." Click="MenuOptionsAdvancedImageSetOptions_Click" Style="{StaticResource ApplicationMenuItem}" ToolTip="Image set configuration options that should only be used by advanced users."/>
                </MenuItem>

                <!-- help menu -->
                <MenuItem Header="_Help">
                    <MenuItem Header="_About..." Click="MenuHelpAbout_Click" Style="{StaticResource ApplicationMenuItem}" ToolTip="Displays version information about this program and how to contact the developers."/>
                </MenuItem>
            </Menu>
            <TextBlock Style="{StaticResource ApplicationTitle}" Grid.Column="2" />
            <Button Style="{StaticResource SystemMinimizeButton}" Grid.Column="4" />
            <Button Style="{StaticResource SystemMaximizeRestoreButton}" Grid.Column="5" />
            <Button Style="{StaticResource SystemCloseButton}" Grid.Column="6" />
        </Grid>
        <control:TabControlWithoutHomeAndEnd x:Name="Tabs" Margin="4,4,4,4">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Padding" Value="10,2,10,0" />
                </Style>
            </TabControl.Resources>
            <TabItem Header="Instructions">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="300" />
                    </Grid.ColumnDefinitions>
                    <FlowDocumentScrollViewer AllowDrop="True" Drop="Instructions_Drop" PreviewDragEnter="Instructions_PreviewDrag" PreviewDragOver="Instructions_PreviewDrag" VerticalScrollBarVisibility="Auto" Grid.Column="0">
                        <FlowDocument FontSize="12" TextAlignment="Left" ColumnRuleWidth="2" FontFamily="Verdana">
                            <Paragraph FontWeight="Bold" FontSize="20">What the Template Editor does</Paragraph>
                            <Paragraph>
                                Information recorded for each image or video from a camera is specific to the kinds of files you want to analyze, your data needs, and how that data will be processed.  This differs between organizations and possibly between different kinds of image sets.  You define your needs through this template editor which saves them in template (.tdb file) named
                                <Bold>CarnassialTemplate.tdb</Bold> by default.  This template file is then included in each image set folder.  Carnassial looks the template and uses it to create the user interface and manage the data you enter.
                            </Paragraph>
                            <Paragraph FontWeight="Bold" FontSize="20">Working with templates</Paragraph>
                            <List>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>File -> New</Bold> Creates a new template with required fields which you can then add new fields to.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>File -> Open</Bold> Opens an existing template so you can further modify its contents.
                                    </Paragraph>
                                </ListItem>
                            </List>
                            <Paragraph>Each template includes several required fields:
                                <Bold>RelativePath, File, DateTime, UtcOffset, ImageQuality,</Bold> and
                                <Bold>DeleteFlag</Bold> .  Carnassial fills these in automatically.  The template editor gives you the option of making these (and other) fields invisible in the user interface.  RelativePath and File locate files on disk and DateTime and UtcOffset completely describe when a file was captured.  ImageQuality powers much of Carnassial's select menu and DeleteFlag enables one selection option as well as delete options under Carnassial's edit menu.
                            </Paragraph>
                            <Paragraph>You can add new data fields specific to your project. Each will be one of the following types.</Paragraph>
                            <List>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Counter</Bold> Numeric data (integers).  Normally used to count specific entities found in an image.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Choice</Bold> A list of values selected from a menu.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Note</Bold> General purpose textual data usable for any purpose (comments, camera station names, study sites, survey name,
                                        <Italic>etc</Italic> .)
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Flag</Bold> Boolean data; true or false.
                                    </Paragraph>
                                </ListItem>
                            </List>
                            <Paragraph>You can specify various attributes for each field.</Paragraph>
                            <List>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Data label</Bold> The field's column name in Carnassial's database file (.ddb).  Much more restricted than the label.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Label</Bold> The name displayed for the field in Carnassial's user interface.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Values</Bold> The choices available for a choice field, entered one per line, or the default set of autocompletions for a note.  Including an empty line allows the field to be set to empty.  Each entry in the list should be unique.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Default Value</Bold> The field's initial value.  For example, if a survey name field is present it's often quite convenient to have it default to something like "Our Spiffy Project" rather than requiring this be typed in for every file in the image set.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Tooltip</Bold> Help text displayed when a Carnassial user hovers the mouse cursor over the field's name.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Analysis label</Bold> Whether the field is used to label a Carnassial analysis button when an analysis is assigned.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Copyable</Bold> Whether or not Carnassial's copy from previous button and context menus can be used to populate data in the field.  In most cases it's desirable to have fields be copyable.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Index</Bold> Whether an index is created for the field in Carnassial's database.  This should left unchecked unless custom selections using the field take too long.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Visible</Bold> Whether or not a field is displayed in the Carnassial user interface.  Fields should generally be visible.
                                    </Paragraph>
                                </ListItem>
                                <ListItem>
                                    <Paragraph>
                                        <Bold>Width</Bold> How wide the field appears in the Carnassial user interface.  The editor shows a preview of the layout.
                                    </Paragraph>
                                </ListItem>
                            </List>
                            <Paragraph>You can also drag and drop the fields in the preview windows to set their order in the Carnassial user interface and the column order in .csv spreadsheet files.</Paragraph>
                            <Paragraph>If you're new to Carnassial
                                <Hyperlink Name="TutorialLink" RequestNavigate="TutorialLink_RequestNavigate">check out the tutorial</Hyperlink> for more help.
                            </Paragraph>
                        </FlowDocument>
                    </FlowDocumentScrollViewer>
                </Grid>
            </TabItem>
            <TabItem Header="Template">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="300" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="125" />
                        </Grid.RowDefinitions>

                        <DataGrid Name="ControlDataGrid" Grid.Row="0" RowHeight="25" VirtualizingStackPanel.IsVirtualizing="False"
                                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" 
                                  CellEditEnding="ControlDataGrid_CellEditEnding"
                                  ColumnHeaderStyle="{DynamicResource HeaderStyle}"
                                  LayoutUpdated="ControlDataGrid_LayoutUpdated"
                                  PreviewTextInput="ControlDataGrid_PreviewTextInput" 
                                  RowEditEnding="ControlDataGrid_RowEditEnding"
                                  SelectionChanged="ControlDataGrid_SelectionChanged"
                                  SelectionMode="Single">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="{StaticResource ControlGridDisabledCellBackground}" />
                                            <Setter Property="Foreground" Value="{StaticResource ControlGridDisabledCellForeground}" />
                                        </Trigger>
                                        <Trigger Property="IsReadOnly" Value="True">
                                            <Setter Property="Background" Value="{StaticResource ControlGridDisabledCellBackground}" />
                                            <Setter Property="Foreground" Value="{StaticResource ControlGridDisabledCellForeground}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Resources>
                                <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
                                    <Setter Property="VerticalContentAlignment" Value="Bottom" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Binding="{Binding Path=ID}" CanUserSort="False" IsReadOnly="True" Visibility="Collapsed" />
                                <DataGridTextColumn MinWidth="40" Header="Type" Binding="{Binding Path=Type, Converter={StaticResource ControlTypeConverter}}" CanUserSort="False" IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Type}" Value="Note">
                                                    <Setter Property="ToolTip" Value="A note field accepts free-form text.  Edit its well known values to define common values which will be available for autocomplete." />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                    <Setter Property="ToolTip" Value="A counter field provides a point and click interface for counting entities in an image or video." />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                                    <Setter Property="ToolTip" Value="A choice field provides a drop down menu of choices.  Edit its well known values to create these choices." />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="Flag">
                                                    <Setter Property="ToolTip" Value="A flag field can be toggled between true and false." />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="File">
                                                    <Setter Property="ToolTip" Value="Carnassial automatically sets File to the file name of the image or video." />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="RelativePath">
                                                    <Setter Property="ToolTip" Value="Carnassial automatically sets RelativePath to the folder path from the template to the file." />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="DateTime">
                                                    <Setter Property="ToolTip" Value="Carnassial automatically sets a file's date and time.  They can be edited if changes are required." />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="ImageQuality">
                                                    <Setter Property="ToolTip" Value="By default, Carnassial sets a file's image quality.  It can be edited or recalculated later if needed." />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="DeleteFlag">
                                                    <Setter Property="ToolTip" Value="The delete flag indicates whether a file is marked deletion.  Marked files can be removed from disk and from the image set using Carnassial's edit menu." />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn MinWidth="40" Header="Data Label" Binding="{Binding Path=DataLabel, Converter={StaticResource TrimmingConverter}}" CanUserSort="False">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="ToolTip" Value="The text describing this field as written in the output file. Will be the same as the Label if its left empty."/>
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn MinWidth="40" Header="Label" Binding="{Binding Path=Label, Converter={StaticResource TrimmingConverter}}" CanUserSort="False">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="ToolTip" Value="The text describing this field as shown on on a mouse hover over it in Carnassial's data entry panel."/>
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn MinWidth="40" Header="Well Known&#x0a;Values" Width="80" CanUserSort="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Click="EditWellKnownValues_Click" Content="Edit..." Margin="1" Tag="{Binding Path=ControlOrder}">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Style.Triggers>
                                                            <!-- hide define edit button for most standard controls it applies to counters and user defined notes -->
                                                            <DataTrigger Binding="{Binding DataLabel}" Value="File">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DataLabel}" Value="RelativePath">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DataLabel}" Value="ImageQuality">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="DateTime">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <!-- legacy back compat with older templates where DeleteFlag has Type=DeleteFlag rather than Flag -->
                                                            <DataTrigger Binding="{Binding DataLabel}" Value="DeleteFlag">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                                                <Setter Property="ToolTip" Value="Define the values which can be chosen for this field."/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="Flag">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="Note">
                                                                <Setter Property="ToolTip" Value="Define the initial list of autocompletions for this field."/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Type}" Value="UtcOffset">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Default Value" CanUserSort="False" MinWidth="40" CellTemplateSelector="{StaticResource ControlTypeDefaultValueSelector}" />
                                <DataGridTextColumn Header="Control&#x0a;Order" Binding="{Binding Path=ControlOrder}" CanUserSort="False" IsReadOnly="True" Visibility="Collapsed" />
                                <DataGridTextColumn Header="Spreadsheet&#x0a;Order" Binding="{Binding Path=SpreadsheetOrder}" CanUserSort="False" IsReadOnly="True" Visibility="Collapsed" />
                                <DataGridTextColumn MinWidth="50" Header="Tooltip" Binding="{Binding Path=Tooltip, Converter={StaticResource TrimmingConverter}}" Width="*" CanUserSort="False">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="ToolTip" Value="The help text describing this field as shown in the user interface."/>
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridCheckBoxColumn MinWidth="25" Header="Analysis&#x0a;Label" Binding="{Binding Path=AnalysisLabel, Converter={StaticResource TrimmingConverter}}" Width="Auto" CanUserSort="False">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="ToolTip" Value="Whether the value of this field is shown as a reminder on analysis buttons."/>
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" Value="{StaticResource ControlGridDisabledCellBackground}" />
                                                    <Setter Property="Foreground" Value="{StaticResource ControlGridDisabledCellForeground}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridCheckBoxColumn MinWidth="25" Width="Auto" Header="Copyable" Binding="{Binding Path=Copyable}" CanUserSort="False">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="ToolTip" Value="Whether the data value from the previous file will be copied to the current file if the user selects the 'Copy' button in Carnassial."/>
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" Value="{StaticResource ControlGridDisabledCellBackground}" />
                                                    <Setter Property="Foreground" Value="{StaticResource ControlGridDisabledCellForeground}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridCheckBoxColumn MinWidth="25" Width="Auto" Header="Index" Binding="{Binding Path=IndexInFileTable}" CanUserSort="False">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="ToolTip" Value="Whether this field is indexed in Carnassial's database.  Leave this unchecked unless custom selections using the field take too long."/>
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" Value="{StaticResource ControlGridDisabledCellBackground}" />
                                                    <Setter Property="Foreground" Value="{StaticResource ControlGridDisabledCellForeground}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridCheckBoxColumn MinWidth="25" Width="Auto" Header="Visible" Binding="{Binding Path=Visible}" CanUserSort="False">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="ToolTip" Value="Whether this item will be displayed in the user interface."/>
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" Value="{StaticResource ControlGridDisabledCellBackground}" />
                                                    <Setter Property="Foreground" Value="{StaticResource ControlGridDisabledCellForeground}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridTextColumn MinWidth="40" Header="Max&#x0a;Width" Binding="{Binding Path=MaxWidth}" CanUserSort="False">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="ToolTip" Value="The width of the data entry field as shown in the user interface."/>
                                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Grid Name="RowControls" Grid.Row="0" Grid.Column="1" Margin="10,10,10,10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Button Content="Add _counter" Click="AddControlButton_Click" IsEnabled="False" Margin="0,0,0,5" Name="AddCounterButton" Padding="5,5,5,5" ToolTip="Add a new counter control." Grid.Column="0" Grid.Row="0" />
                            <Button Content="Add c_hoice" Click="AddControlButton_Click" IsEnabled="False" Margin="0,5,0,5" Name="AddFixedChoiceButton" Padding="5,5,5,5" ToolTip="Add a new choice control." Grid.Column="0" Grid.Row="1" />
                            <Button Content="Add _note" Click="AddControlButton_Click" IsEnabled="False" Margin="0,5,0,5" Name="AddNoteButton" Padding="5,5,5,5" ToolTip="Add a new note control." Grid.Column="0" Grid.Row="2" />
                            <Button Content="Add fla_g" Click="AddControlButton_Click" IsEnabled="False" Margin="0,5,0,5" Name="AddFlagButton" Padding="5,5,5,5" ToolTip="Add a new flag control." Grid.Column="0" Grid.Row="3" />
                            <Button Content="_Remove" Click="RemoveControlButton_Click" IsEnabled="False" Margin="0,30,0,0" Name="RemoveControlButton" Padding="5,5,5,5" ToolTip="Remove the currently selected control." Grid.Column="0" Grid.Row="4" />
                        </Grid>
                        <GridSplitter Grid.Row="1" Grid.ColumnSpan="2" Height="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" />

                        <!-- spreadsheet order -->
                        <Grid Grid.Row="2" Grid.ColumnSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Margin="10,10,10,0" Text="The columns in spreadsheets exported from Carnassial while using this template are dislayed below.  Drag and drop columns to rearrange their order to your preference." TextWrapping="Wrap" />
                            <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="1" Margin="10,0,10,10">
                                <ScrollViewer Height="50" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" VerticalAlignment="Top">
                                    <DataGrid x:Name="SpreadsheetOrderPreview" ColumnReordered="OnSpreadsheetOrderChanged" Height="25" VerticalAlignment="Top"/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </Grid>
                    <GridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="4" />
                    <Grid Name="ControlGrid" Background="{StaticResource ApplicationBackgroundBrush}" Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Text="Drag and drop the controls below by their labels to order them to your preference." Grid.Row="0" Margin="4,2,4,4" TextWrapping="Wrap" />
                        <control:DataEntryControls x:Name="DataEntryControls" ControlOrderChangedByDragDrop="DataEntryControls_ControlOrderChangedByDragDrop" Grid.Column="0" Grid.Row="1" />
                        <control:AnalysisButtons x:Name="AnalysisButtons" Grid.Column="0" Grid.Row="2" />
                        <TextBlock Name="MessageBar" Background="{StaticResource ApplicationBorderBackgroundBrush}"  Foreground="{StaticResource ApplicationBorderForegroundBrush}" Grid.Column="0" Grid.Row="3" MinHeight="60" Padding="10,5,2,5" TextWrapping="Wrap" />
                    </Grid>
                </Grid>
            </TabItem>
        </control:TabControlWithoutHomeAndEnd>
    </Grid>
</carnassial:ApplicationWindow>
