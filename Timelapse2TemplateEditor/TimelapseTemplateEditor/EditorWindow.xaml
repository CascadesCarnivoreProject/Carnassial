<Window x:Class="Timelapse.Editor.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Timelapse.Editor"
        Name="OnlyWindow"
        Title="Timelapse Template Editor" Height="910.957" Width="1244.808" MinHeight="560" MinWidth="800" Icon="32x32.ico" Loaded="Window_Loaded" Closing="Window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <!-- Focus Style for checkbox https://ramontebar.wordpress.com/2010/02/26/wpf-custom-check-box-template/-->
            <SolidColorBrush x:Key="InputBackgroundFocused" Color="Orange"></SolidColorBrush>
            <Style x:Key="CheckBoxFocusVisualStyle">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border CornerRadius="2" Margin="0,0,4,3" BorderThickness="2" BorderBrush="{StaticResource InputBackgroundFocused}" Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Fill Brushes For Checkbox Style-->
            <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#CCC" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#CCC" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#EEE" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#EEE" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#AAA" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#BBB" Offset="0.0"/>
                        <GradientStop Color="#EEE" Offset="0.1"/>
                        <GradientStop Color="#EEE" Offset="0.9"/>
                        <GradientStop Color="#FFF" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
            <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
            <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

            <!-- Border Brushes For Checkbox Style-->
            <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#CCC" Offset="0.0"/>
                        <GradientStop Color="#444" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#CCC" Offset="0.0"/>
                        <GradientStop Color="#444" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#777" Offset="0.0"/>
                        <GradientStop Color="#000" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#444" Offset="0.0"/>
                        <GradientStop Color="#888" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
            <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
            <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

            <!-- Miscellaneous Brushes For Checkbox Style-->
            <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
            <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

            <ToolTip x:Key="DefaultValueToolTip">
                <TextBlock>An optional default data value that will be displayed to the analyst</TextBlock>
            </ToolTip>
            <ToolTip x:Key="LabelToolTip">
                <TextBlock>The text describing this field as shown in the user interface</TextBlock>
            </ToolTip>
            <ToolTip x:Key="DataLabelToolTip">
                <TextBlock>The text describing this field as written in the output file. Will be the same as the Label if its left empty.</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TooltipToolTip">
                <TextBlock>The help text describing this field as shown in the user interface</TextBlock>
            </ToolTip>
            <ToolTip x:Key="WidthToolTip">
                <TextBlock>The width of the data entry field as shown in the user interface</TextBlock>
            </ToolTip>
            <ToolTip x:Key="CopyableToolTip">
                <TextBlock>Whether the data value from the former image will be copied to the current image if the user selects the ‘Copy’ button in Timelapse</TextBlock>
            </ToolTip>
            <ToolTip x:Key="VisibleToolTip">
                <TextBlock>Whether this item will be displayed in the user interface</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeNoteToolTip">
                <TextBlock>The Note item accepts free-form text</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeCounterToolTip">
                <TextBlock>The Count item provides a point and click interface for counting entities in an image</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeFixedChoiceToolTip">
                <TextBlock>The Choice item provides a drop down menu of possible choices that can be entered. Edit the list to create these choices</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeFlagToolTip">
                <TextBlock>The Flag item can be toggled between true and false</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeFileToolTip">
                <TextBlock>The File Item is filled in automatically by the system with the file name of the image</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeFolderToolTip">
                <TextBlock>The Folder Item is filled in automatically by the system</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeDateToolTip">
                <TextBlock>The Date item is filled in automatically by the system but will still be editable if changes are required</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeTimeToolTip">
                <TextBlock>The Time item is filled in automatically by the system but will still be editable if changes are required</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeImageQualityToolTip">
                <TextBlock>The Image Quality item is filled in automatically by the system</TextBlock>
            </ToolTip>
            <ToolTip x:Key="TypeDeletionFlagToolTip">
                <TextBlock>The Deleted flag is a standard control used to mark images for deletion</TextBlock>
            </ToolTip>
            <ToolTip x:Key="ListFixedChoiceToolTip">
                <TextBlock>A list of items displayed as a menu of choices. Type in new items; right click on an item to edit, move or delete it.</TextBlock>
            </ToolTip>
            <local:ListBoxDBOutputConverter x:Key="listConverter" />
            <local:CellTextBlockConverter x:Key="cellTBConverter" />
            <Style  x:Key="ComboBoxCodeBar" TargetType="ComboBox" >
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,4,5,5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="LightBlue"/>
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Height" Value="25" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="IsReadOnly" Value="False" />
                <Setter Property="IsEditable" Value="False" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0,0,0,5" />
            </Style>
        </Grid.Resources>
        <DockPanel Name="mainUI">
            <Menu DockPanel.Dock="Top">
                <MenuItem Name="FileMenu" Header="_File" >
                    <MenuItem Name="NewFileMenuItem" Header="_New" Click="NewFileMenuItem_Click" ToolTip="Create a new data template file">
                        <MenuItem.Icon>
                            <Image Source="Images/NewFile_6276.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="OpenFileMenuItem" Header="_Open..." Click="OpenFileMenuItem_Click" ToolTip="Open an existing data template file">
                        <MenuItem.Icon>
                            <Image Source="Images/folder_Open_16xLG.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="ConvertFileMenuItem" Header="_Convert..." Click="ConvertCodeTemplateFileMenuItem_Click" ToolTip="Convert an old code template file to a new data template file">
                        <MenuItem.Icon>
                            <Image Source="Images/ConvertFile.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Name="MenuItemRecentTemplates" Header="_Recent templates" IsEnabled="false" ToolTip="Recently used templates"/>
                    <Separator />
                    <MenuItem Name="ExitFileMenuItem" Header="E_xit" Click="ExitFileMenuItem_Click">
                        <MenuItem.Icon>
                            <Image Source="Images/Close_16XLG.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Name="ViewMenu" Header="_View" IsEnabled="False">
                    <MenuItem Name="ShowAllColumns"  IsCheckable="True" IsChecked="False" Header="_Show All Columns" Click="ShowAllColumnsMenuItem_Click" ToolTip="Show all the columns, which includes how sort orders are tracked">
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Help" >
                    <MenuItem Name="MenuItemTimelapseHomePage" Header="The Timelapse _web page (via your web browser)" Click="MenuTimelapseWebPage_Click" ToolTip="Displays the Timelapse Image Analyzer web page in your browser"/>
                    <MenuItem Name="MenuItemTutorialManual" Header="Tutorial _manual (via your web browser)" Click="MenuTutorialManual_Click" ToolTip="Displays the Tutorial Manual - a large PDF file - in your browser"/>
                    <MenuItem Name="MenuItemDownloadSampleImages" Header="_Download tutorial sample images (via your web browser)" Click="MenuDownloadSampleImages_Click" ToolTip="Using your browser, it downloads the sample image files used in the  Tutorial Manual for you to practise with"/>
                    <MenuItem Name="MenuItemJoinMailingList" Header="Timelapse mailing list - _Join it (via your web browser)" Click="MenuJoinTimelapseMailingList_Click" ToolTip="Using your browser, go to the page that lets you join the timelapse mailing list. You will be informed about updates, and you can post requests to it."/>
                    <MenuItem Name="MenuItemMailToMailingList" Header="Timelapse mailing list - Send _email " Click="MenuMailToTimelapseMailingList_Click" ToolTip="Post an email to the Timelapse mailing list. You should join the mailing list before doing this."/>
                    <MenuItem Name="AboutMenuItem" Header="_About" Click="AboutMenuItem_Click" ToolTip="Displays version information about this program and how to contact its creator"/>
                </MenuItem>
            </Menu>
            <TextBlock Name="HelpText" Visibility="Collapsed" Grid.Row="0" FontSize="16" Text="Use the File Menu to create or open a template, and to convert an old CodeTemplate.xml file to the new format." Margin =" 10" DockPanel.Dock="Top"/>

            <FlowDocumentScrollViewer Name="HelpDocument">
                <FlowDocument  FontSize="12" TextAlignment="Left" ColumnRuleWidth="2" FontFamily="Verdana">
                    <Paragraph FontWeight="Bold" FontSize="20">
                        <Run Text="What the Timelapse Template Editor does"/>
                    </Paragraph>
                    <Paragraph FontSize="12">
                        <Run Text="The kinds of information that you and/or your organization want to record from each image will be specific to the kinds of images you want to analyze, your data needs and how you will process that data later. This information will differ between organizations, and possibly between different kinds of image sets. This is where the template comes in."/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run Text="The template specifies the custom data required by you and your organization. You define your data needs through this template editor, which saves it as a file usually named "/>

                        <Bold>
                            <Run Text="TimelapseTemplate.db"/>
                        </Bold>
                        <Run Text=". You would then include that template file in each image set folder. Timelapse will look for that file and use the template information to create the user interface and to manage the data you enter."/>
                    </Paragraph>
                    <Paragraph FontSize="12">
                        <Run FontWeight="Bold" Text="Note"/>
                        <Run FontWeight="Bold" Language="en-ca" Text=": "/>
                        <Run Text="Templates are normally created by a knowledgeable person (e.g., the scientist in charge), where they invested time thinking about what data is required and how it will be analyzed."/>
                    </Paragraph>
                    <Paragraph FontWeight="Bold" FontSize="20">
                        <Run Text="To Create a Template"/>
                    </Paragraph>
                    <Paragraph>
                        <Run Text="Using the File menu options, You can create a template in three ways. After its created, you can modify its contents (e.g., adding, modifying and deleting data fields)"/>
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>
                                <Run FontWeight="Bold" Text="New"/>
                                <Run FontWeight="Bold" Language="en-ca" Text=": "/>
                                <Run Text="Creates a new template with default fields and values."/>
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                <Run FontWeight="Bold" Text="Open"/>
                                <Run FontWeight="Bold" Language="en-ca" Text=": "/>
                                <Run Text="Opens an existing template."/>
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                <Run FontWeight="Bold" Text="Convert"/>
                                <Run FontWeight="Bold" Language="en-ca" Text=": "/>
                                <Run Text="An earlier version of Timelapse used templates called "/>
                                <Run FontWeight="Bold" Text="CodeTemplate.xml"/>
                                <Run Text=". This option converts these to the new-style template. Its a slow operation, so be patient"/>
                            </Paragraph>
                        </ListItem>
                    </List>
                    <Paragraph FontWeight="Bold" FontSize="20">
                        <Run Text="To Edit a Template"/>
                    </Paragraph>
                    <Paragraph>
                        <Run Text="Each template already includes several pre-defined data types: "/>
                        <Bold>
                            <Run Text="File"/>
                        </Bold>
                        <Run Text=" name, "/>
                        <Bold>
                            <Run Text="Folder,"/>
                        </Bold>
                        <Run Text=" name, "/>
                        <Bold>
                            <Run Text="Date,"/>
                        </Bold>
                        <Bold>
                            <Run Text="Time,"/>
                        </Bold>
                        <Bold>
                            <Run Text="ImageQuality"/>
                        </Bold>
                        <Run Text=", and "/>
                        <Bold>
                            <Run Text="DeleteFlag"/>
                        </Bold>
                        <Run Text=". Timelapse tries to fill these in automatically. The template editor gives you the option of making these (and other) fields invisible in the user interface."/>
                    </Paragraph>
                    <Paragraph>
                        <Run Text="You can add new data fields specific to your project, where each is created as one of the following types. For each type, you can specify various attributes (e.g., its name, help text, etc.). You can also specify the order of these fields in the Timelapse user interface and in the spreadsheet."/>
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>
                                <Run FontWeight="Bold" Text="Count"/>
                                <Run FontWeight="Bold" Language="en-ca" Text=": "/>
                                <Run Text="Numeric data (integers). Normally used to count specific entities seen in an image."/>
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                <Run FontWeight="Bold" Text="Choice / Fixed Choice: "/>
                                <Run Text="A list of pre-defined values. Normally used to select a value from a menu"/>
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                <Run FontWeight="Bold" Text="Note:"/>
                                <Run Text="Textual data that you can use for any purpose (e.g., comments)"/>
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                <Run Text="Boolean data, i.e., true or false"/>
                            </Paragraph>
                        </ListItem>
                    </List>
                    <Paragraph FontWeight="Bold" FontSize="20">
                        <Run Text="Go through the Tutorial Manual"/>
                    </Paragraph>
                    <Paragraph>
                        <Run Text="The manual contains a tutorial that illustrates how you can create and modify templates. "/>
                    </Paragraph>
                </FlowDocument>
            </FlowDocumentScrollViewer>

            <Grid DockPanel.Dock="Top" Margin="10,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Name="DisplayGrid" />
                    <ColumnDefinition Name="EditButton" Width="100"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Name="EditScheme" Height="1.5*" MinHeight="225"/>
                    <RowDefinition Name="MenuPreview" Height="1*"  MinHeight="250"/>
                </Grid.RowDefinitions>

                <!-- If you change the visible rows or header names, please check UpdateCellColors() constants to ensure they match new conventions -->
                <TextBlock Name="TextMessage1" Visibility=" Collapsed" Grid.Row="0" Text="Create a new template, read in an existing template, or convert and old XML template. Grey Boxes aren't editable"/>

                <DataGrid MinHeight="250" VerticalAlignment="Top"  Name="TemplateDataGrid"  Visibility="Collapsed" PreviewKeyDown="TemplateDataGrid_PreviewKeyDown" PreviewTextInput="TemplateDataGrid_PreviewTextInput" Grid.Row="0" 
                          BeginningEdit="NewTemplateDataGrid_BeginningEdit" RowHeight="25" LayoutUpdated="TemplateDataGrid_LayoutUpdated" 
                          SelectionChanged="TemplateDataGrid_SelectionChanged" SelectionMode="Single" CanUserReorderColumns="False" 
                          CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" CurrentCellChanged="TemplateDataGrid_CurrentCellChanged" 
                          ItemsSource="{Binding}" Margin="0,0,10,0" ColumnHeaderStyle="{DynamicResource VerticalGridHeaderStyle}" CellEditEnding="NewTemplateDataGrid_CellEditEnding" >
                    <!-- DataContext="{Binding}" -->

                    <DataGrid.Resources>
                        <Style x:Key="VerticalGridHeaderStyle" TargetType="DataGridColumnHeader">
                            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Style>
                        <Style x:Key="DataGridCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="8,0,3,0" />
                        </Style>

                    </DataGrid.Resources>
                    <DataGrid.Columns >
                        <DataGridTextColumn Header="ID"   CanUserSort="False" IsReadOnly="True" Binding="{Binding Path=Id, Converter={StaticResource cellTBConverter}}" />
                        <DataGridTextColumn Header="Control&#x0a;order" Binding="{Binding Path=ControlOrder, Converter={StaticResource cellTBConverter}}" CanUserSort="False" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Spreadsheet&#x0a;order" Binding="{Binding Path=SpreadsheetOrder, Converter={StaticResource cellTBConverter}}" CanUserSort="False" IsReadOnly="True"/>
                        <DataGridTextColumn MinWidth="40" Header="Type" Binding="{Binding Path=Type, Converter={StaticResource cellTBConverter}}" CanUserSort="False">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="Note">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeNoteToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Counter">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeCounterToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeFixedChoiceToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Flag">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeFlagToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="File">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeFileToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Folder">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeFolderToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Date">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeDateToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Time">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeTimeToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="ImageQuality">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeImageQualityToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="DeleteFlag">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeDeletionFlagToolTip}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn MinWidth="40"  Header="Default Value" Binding="{Binding Path=DefaultValue, Converter={StaticResource cellTBConverter}}" CanUserSort="False" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource DefaultValueToolTip}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="Counter">
                                            <Setter Property="TextAlignment" Value="Right"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn MinWidth="40"  Header="Label" Binding="{Binding Path=Label, Converter={StaticResource cellTBConverter}}" CanUserSort="False" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource LabelToolTip}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn MinWidth="40"   Header="Data Label"  Binding="{Binding Path=DataLabel,  Converter={StaticResource cellTBConverter}}" CanUserSort="False" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource DataLabelToolTip}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn MinWidth="50"  Header="Tooltip" Binding="{Binding Path=Tooltip, Converter={StaticResource cellTBConverter}}" Width="*" CanUserSort="False" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource TooltipToolTip}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn MinWidth="40"  Header="Width" Binding="{Binding Path=TXTBOXWIDTH, Converter={StaticResource cellTBConverter}}" CanUserSort="False" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource WidthToolTip}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn  MinWidth="25" Width="Auto" Header="Copyable" SortMemberPath="Include" CanUserSort="False" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Name="CheckBox" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Copyable, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="ToolTip" Value="{StaticResource CopyableToolTip}"/>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn MinWidth="25" Width="Auto" Header="Visible" SortMemberPath="Include" CanUserSort="False" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Name="CheckBox" HorizontalAlignment="Center" VerticalAlignment="Center"  IsChecked="{Binding Path=Visible, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="ToolTip" Value="{StaticResource VisibleToolTip}"/>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MinWidth="40" Header="List" Width="80"  CanUserSort="False" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <Button Name="btnButton" Tag="{Binding Path=ControlOrder}" Click="ChoiceListButton_Click"  local:EditorWindowExtensions.ChoiceList="{Binding Path=List, Mode=TwoWay, Converter={StaticResource listConverter}}" Margin="1"  Content="Define List" >
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Style.Triggers>
                                                        <!--Triggers for disabling lists for some types-->
                                                        <DataTrigger Binding="{Binding Type}" Value="File">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="RelativePath">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Folder">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Date">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Time">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="DeleteFlag">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Note">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Flag">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                                            <Setter Property="ToolTip" Value="{StaticResource ListFixedChoiceToolTip}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <DockPanel Name="RowControls" Visibility="Collapsed" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,10,0" >
                    <Border DockPanel.Dock="Top" BorderBrush="LightGray" BorderThickness="1" Margin="0" >
                        <DockPanel DockPanel.Dock="Top" Margin="0,0,0,-1" >
                            <TextBlock  Margin="0,0,0,5" DockPanel.Dock="Top" FontSize="14"  HorizontalAlignment="Center"><Run Text="Add:"/></TextBlock>
                            <UniformGrid Margin="0,0,0,0" Rows="4" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                                <Button Content="Count"  Margin="0,0,0,2.5" Tag="Counter" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddControlButton_Click" Name="AddCounterButton"/>
                                <Button Content="Choice" Margin="0,0,0,2.5" Tag="FixedChoice" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddControlButton_Click" Name="AddFixedChoiceButton"/>
                                <Button Content="Note" Margin="0,0,0,2.5"  Tag="Note" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddControlButton_Click" Name="AddNoteButton"/>
                                <Button Content="Flag" Margin="0,0,0,0"  Tag="Flag" DockPanel.Dock="Bottom"  HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddControlButton_Click" Name="AddFlagButton"/>
                            </UniformGrid>
                        </DockPanel>
                    </Border>
                    <Button Content="Remove" FontSize="12" HorizontalContentAlignment="Center"  DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Name="RemoveControlButton" IsEnabled="False" Height="Auto" MinHeight="30" VerticalAlignment="Top"  Click="RemoveControlButton_Click" Margin="0,30,0,0"/>

                </DockPanel>

                <GridSplitter Grid.Row="1" Grid.ColumnSpan="2"
                 Height="2" Background="DarkGray" Margin="-10,10,0,0"
                 VerticalAlignment="Top" 
                 HorizontalAlignment="Stretch" />

                <Grid Name="OtherGrids" Visibility="Collapsed" Grid.Row="1" Grid.ColumnSpan="2" MinHeight="200" Margin="0,7,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition  Height="1*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height=".5*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Margin="0,10,10,0" FontWeight="Bold" Text="What the interface will (roughly) look like. Drag and drop these controls (by their labels) to re-arrange their order to your preference"></TextBlock>
                    <Border Grid.Row="1" BorderBrush="Gray" Background="White" BorderThickness="1" Margin="0,0,10,10" >
                        <ScrollViewer VerticalAlignment="Top">
                            <WrapPanel x:Name="controlsPanel" Margin="10,10,10,0" Orientation="Horizontal" Tag="DROPTARGET" AllowDrop="True" PreviewMouseLeftButtonDown="OnPreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="OnPreviewMouseLeftButtonUp" PreviewMouseMove="OnPreviewMouseMove"
                                    DragEnter="OnDragEnter" Drop="OnDragDrop" />
                        </ScrollViewer>
                    </Border>
                    <TextBlock Grid.Row="2" Margin="0,5,10,0" FontWeight="Bold" Text="The spreadsheet column order.  Drag and drop columns to re-arrange their order to your preference"></TextBlock>
                    <Border Grid.Row="3" BorderBrush="Gray" Background="White" BorderThickness="1" Margin="0,0,10,10" >
                        <ScrollViewer MinHeight="50" Height="50" HorizontalScrollBarVisibility="Visible" VerticalAlignment="Top">
                            <DataGrid x:Name="dgSpreadsheet" Margin="0,10,0,0"  MinHeight="25" Height="25" ColumnReordered="OnSpreadsheetOrderChanged" VerticalAlignment="Top"/>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Grid>
        </DockPanel>

    </Grid>

</Window>
